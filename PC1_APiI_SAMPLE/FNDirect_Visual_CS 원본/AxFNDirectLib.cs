//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:2.0.50727.5448
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("1.0.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("2011-12-20 오후 9:18:19")]

namespace AxFNDirectLib {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{40d38cef-eedd-4c67-87bf-9839f5ffc753}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("OnReceiveProc")]
    public class AxFNDirect : System.Windows.Forms.AxHost {
        
        private FNDirectLib._DFNDirect ocx;
        
        private AxFNDirectEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxFNDirect() : 
                base("40d38cef-eedd-4c67-87bf-9839f5ffc753") {
            this.SetAboutBoxDelegate(new AboutBoxDelegate(AboutBox));
        }
               
        public event _DFNDirectEvents_OnReceiveProcEventHandler OnReceiveProc;
        
        public event _DFNDirectEvents_OnReceiveRealDataEventHandler OnReceiveRealData;
        
        public event _DFNDirectEvents_OnReceiveErrorEventHandler OnReceiveError;
        
        public virtual int CmCancelSend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmCancelSend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmCancelSend(sData)));
            return returnValue;
        }
        
        public virtual int CmModifySend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmModifySend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmModifySend(sData)));
            return returnValue;
        }
        
        public virtual int CmWorkingOrder(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmWorkingOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmWorkingOrder(sData)));
            return returnValue;
        }
        
        public virtual int CmFilledList(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmFilledList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmFilledList(sData)));
            return returnValue;
        }
        
        public virtual int CmOpenInterest(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmOpenInterest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmOpenInterest(sData)));
            return returnValue;
        }
        
        public virtual int CmDepositStat(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmDepositStat", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmDepositStat(sData)));
            return returnValue;
        }
        
        public virtual int CmOrdableQty(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmOrdableQty", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmOrdableQty(sData)));
            return returnValue;
        }
        
        public virtual int KoPriceQtRequest(string sData, int bReg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoPriceQtRequest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoPriceQtRequest(sData, bReg)));
            return returnValue;
        }
        
        public virtual int GoPriceQtRequest(string sData, int bReg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoPriceQtRequest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoPriceQtRequest(sData, bReg)));
            return returnValue;
        }
        
        public virtual int CmPriceQtRequest(string sData, int bReg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmPriceQtRequest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmPriceQtRequest(sData, bReg)));
            return returnValue;
        }
        
        public virtual int KoWorkingOrderNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoWorkingOrderNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoWorkingOrderNext()));
            return returnValue;
        }
        
        public virtual int KoFilledListNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoFilledListNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoFilledListNext()));
            return returnValue;
        }
        
        public virtual int KoOpenInterestNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoOpenInterestNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoOpenInterestNext()));
            return returnValue;
        }
        
        public virtual int GoWorkingOrderNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoWorkingOrderNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoWorkingOrderNext()));
            return returnValue;
        }
        
        public virtual int GoOrderFillListNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoOrderFillListNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoOrderFillListNext()));
            return returnValue;
        }
        
        public virtual int CmWorkingOrderNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmWorkingOrderNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmWorkingOrderNext()));
            return returnValue;
        }
        
        public virtual int CmFilledListNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmFilledListNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmFilledListNext()));
            return returnValue;
        }
        
        public virtual int CmOpenInterestNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmOpenInterestNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmOpenInterestNext()));
            return returnValue;
        }
        
        public virtual int KoOrderListNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoOrderListNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoOrderListNext()));
            return returnValue;
        }
        
        public virtual int ReceiveRealDataArr(string sReal, ref object arrData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReceiveRealDataArr", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.ReceiveRealDataArr(sReal, ref arrData)));
            return returnValue;
        }
        
        public virtual int GetRealItemArr(string sReal, ref object arrItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetRealItemArr", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetRealItemArr(sReal, ref arrItem)));
            return returnValue;
        }
        
        public virtual int ReceiveProcDataArr(int nRqID, string sProc, int nOutRecIndex, ref object arrData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReceiveProcDataArr", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.ReceiveProcDataArr(nRqID, sProc, nOutRecIndex, ref arrData)));
            return returnValue;
        }
        
        public virtual int GetProcItemArr(int nRqID, string sProc, int nOutRecIndex, ref object arrItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetProcItemArr", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetProcItemArr(nRqID, sProc, nOutRecIndex, ref arrItem)));
            return returnValue;
        }
        
        public virtual void AboutBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AboutBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AboutBox();
        }
        
        public virtual int CommInit() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CommInit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CommInit()));
            return returnValue;
        }
        
        public virtual void CommTerminate(int bSocketClose) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CommTerminate", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CommTerminate(bSocketClose);
        }
        
        public virtual int CommLogin(string sUserID, string sPwd, string sCertPwd) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CommLogin", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CommLogin(sUserID, sPwd, sCertPwd)));
            return returnValue;
        }
        
        public virtual int CommLogout(string sUserID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CommLogout", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CommLogout(sUserID)));
            return returnValue;
        }
        
        public virtual int CommGetConnectState() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CommGetConnectState", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CommGetConnectState()));
            return returnValue;
        }
        
        public virtual void GetRealData(string sReal, ref object arrItem, ref object arrData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetRealData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetRealData(sReal, ref arrItem, ref arrData);
        }
        
        public virtual string ReceiveReal(string sReal, string sItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReceiveReal", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.ReceiveReal(sReal, sItem)));
            return returnValue;
        }
        
        public virtual int ReceiveProcOutRecCnt(int nRqID, string sProc, int nOutRecIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReceiveProcOutRecCnt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.ReceiveProcOutRecCnt(nRqID, sProc, nOutRecIndex)));
            return returnValue;
        }
        
        public virtual string ReceiveProc(int nRqID, string sProc, int nOutRecIndex, int nDataRow, string sItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReceiveProc", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.ReceiveProc(nRqID, sProc, nOutRecIndex, nDataRow, sItem)));
            return returnValue;
        }
        
        public virtual void GetProcData(int nRqID, string sProc, int nOutRecIndex, ref object arrItem, ref object arrData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetProcData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetProcData(nRqID, sProc, nOutRecIndex, ref arrItem, ref arrData);
        }
        
        public virtual int KoOrderSend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoOrderSend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoOrderSend(sData)));
            return returnValue;
        }
        
        public virtual int KoCancelSend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoCancelSend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoCancelSend(sData)));
            return returnValue;
        }
        
        public virtual int KoModifySend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoModifySend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoModifySend(sData)));
            return returnValue;
        }
        
        public virtual int KoWorkingOrder(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoWorkingOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoWorkingOrder(sData)));
            return returnValue;
        }
        
        public virtual int KoFilledList(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoFilledList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoFilledList(sData)));
            return returnValue;
        }
        
        public virtual int KoOrderList(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoOrderList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoOrderList(sData)));
            return returnValue;
        }
        
        public virtual int KoOpenInterest(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoOpenInterest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoOpenInterest(sData)));
            return returnValue;
        }
        
        public virtual int KoDepositStat(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoDepositStat", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoDepositStat(sData)));
            return returnValue;
        }
        
        public virtual int KoAcountList() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoAcountList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoAcountList()));
            return returnValue;
        }
        
        public virtual int KoOrdableQty(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoOrdableQty", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoOrdableQty(sData)));
            return returnValue;
        }
        
        public virtual int GoOrderSend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoOrderSend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoOrderSend(sData)));
            return returnValue;
        }
        
        public virtual int GoCancelSend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoCancelSend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoCancelSend(sData)));
            return returnValue;
        }
        
        public virtual int GoModifySend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoModifySend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoModifySend(sData)));
            return returnValue;
        }
        
        public virtual int GoWorkingOrder(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoWorkingOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoWorkingOrder(sData)));
            return returnValue;
        }
        
        public virtual int GoOrderFillList(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoOrderFillList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoOrderFillList(sData)));
            return returnValue;
        }

        public virtual int GoOrderPeriodList(string sData)
        {
            if ((this.ocx == null))
            {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoOrderPeriodList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoOrderPeriodList(sData)));
            return returnValue;
        }

        public virtual int GoOrderPeriodListNext()
        {
            if ((this.ocx == null))
            {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoOrderPeriodListNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoOrderPeriodListNext()));
            return returnValue;
        }
        
        public virtual int GoOpenInterest(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoOpenInterest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoOpenInterest(sData)));
            return returnValue;
        }
        
        public virtual int GoDepositStat(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoDepositStat", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoDepositStat(sData)));
            return returnValue;
        }
        
        public virtual int GoAcountList() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoAcountList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoAcountList()));
            return returnValue;
        }
        
        public virtual int GoCurrencyCode(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoCurrencyCode", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoCurrencyCode(sData)));
            return returnValue;
        }
        
        public virtual int GoOrdableQty(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoOrdableQty", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoOrdableQty(sData)));
            return returnValue;
        }
        
        public virtual int CmOrderSend(string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CmOrderSend", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.CmOrderSend(sData)));
            return returnValue;
        }

        public virtual int SeriesInfoRequest(int nType)
        {
            if ((this.ocx == null))
            {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SeriesInfoRequest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.SeriesInfoRequest(nType)));
            return returnValue;
        }

        public virtual int KoCandleRequest(string sData)
        {
            if ((this.ocx == null))
            {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("KoCandleRequest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.KoCandleRequest(sData)));
            return returnValue;
        }

        public virtual int GoCandleRequest(string sData)
        {
            if ((this.ocx == null))
            {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GoCandleRequest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GoCandleRequest(sData)));
            return returnValue;
        }

        public virtual int BankDollarQtRequest(int bReg)
        {
            if ((this.ocx == null))
            {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BankDollarQtRequest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.BankDollarQtRequest(bReg)));
            return returnValue;
        }

        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxFNDirectEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(FNDirectLib._DFNDirectEvents));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((FNDirectLib._DFNDirect)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnOnReceiveProc(object sender, _DFNDirectEvents_OnReceiveProcEvent e) {
            if ((this.OnReceiveProc != null)) {
                this.OnReceiveProc(sender, e);
            }
        }
        
        internal void RaiseOnOnReceiveRealData(object sender, _DFNDirectEvents_OnReceiveRealDataEvent e) {
            if ((this.OnReceiveRealData != null)) {
                this.OnReceiveRealData(sender, e);
            }
        }
        
        internal void RaiseOnOnReceiveError(object sender, _DFNDirectEvents_OnReceiveErrorEvent e) {
            if ((this.OnReceiveError != null)) {
                this.OnReceiveError(sender, e);
            }
        }
    }
    
    public delegate void _DFNDirectEvents_OnReceiveProcEventHandler(object sender, _DFNDirectEvents_OnReceiveProcEvent e);
    
    public class _DFNDirectEvents_OnReceiveProcEvent {
        
        public int nRqID;
        
        public string sProc;
        
        public int bExistNext;
        
        public _DFNDirectEvents_OnReceiveProcEvent(int nRqID, string sProc, int bExistNext) {
            this.nRqID = nRqID;
            this.sProc = sProc;
            this.bExistNext = bExistNext;
        }
    }
    
    public delegate void _DFNDirectEvents_OnReceiveRealDataEventHandler(object sender, _DFNDirectEvents_OnReceiveRealDataEvent e);
    
    public class _DFNDirectEvents_OnReceiveRealDataEvent {
        
        public string sReal;
        
        public _DFNDirectEvents_OnReceiveRealDataEvent(string sReal) {
            this.sReal = sReal;
        }
    }
    
    public delegate void _DFNDirectEvents_OnReceiveErrorEventHandler(object sender, _DFNDirectEvents_OnReceiveErrorEvent e);
    
    public class _DFNDirectEvents_OnReceiveErrorEvent {
        
        public int nRqID;
        
        public string sProc;
        
        public string sErrMsg;
        
        public _DFNDirectEvents_OnReceiveErrorEvent(int nRqID, string sProc, string sErrMsg) {
            this.nRqID = nRqID;
            this.sProc = sProc;
            this.sErrMsg = sErrMsg;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxFNDirectEventMulticaster : FNDirectLib._DFNDirectEvents {
        
        private AxFNDirect parent;
        
        public AxFNDirectEventMulticaster(AxFNDirect parent) {
            this.parent = parent;
        }
        
        public virtual void OnReceiveProc(int nRqID, string sProc, int bExistNext) {
            _DFNDirectEvents_OnReceiveProcEvent onreceiveprocEvent = new _DFNDirectEvents_OnReceiveProcEvent(nRqID, sProc, bExistNext);
            this.parent.RaiseOnOnReceiveProc(this.parent, onreceiveprocEvent);
        }
        
        public virtual void OnReceiveRealData(string sReal) {
            _DFNDirectEvents_OnReceiveRealDataEvent onreceiverealdataEvent = new _DFNDirectEvents_OnReceiveRealDataEvent(sReal);
            this.parent.RaiseOnOnReceiveRealData(this.parent, onreceiverealdataEvent);
        }
        
        public virtual void OnReceiveError(int nRqID, string sProc, string sErrMsg) {
            _DFNDirectEvents_OnReceiveErrorEvent onreceiveerrorEvent = new _DFNDirectEvents_OnReceiveErrorEvent(nRqID, sProc, sErrMsg);
            this.parent.RaiseOnOnReceiveError(this.parent, onreceiveerrorEvent);
        }
    }
}
